---
import "@fontsource-variable/inter";
import "@fontsource-variable/source-serif-4";
import "@fontsource-variable/roboto-serif";
import "@fontsource-variable/noto-serif";
import "@styles/global.css";

import { SITE } from "@config";
import { ViewTransitions } from "astro:transitions";

import Header from "@sections/header.astro";
import Footer from "@sections/footer.astro";
import Contact from "@sections/contact.astro";

const googleSiteVerification = import.meta.env.PUBLIC_GOOGLE_SITE_VERIFICATION;

export interface Props {
  title?: string;
  author?: string;
  description?: string;
  ogImage?: string;
  canonicalURL?: string;
}

const {
  title = SITE.title,
  author = SITE.author,
  description = SITE.desc,
  ogImage = SITE.ogImage,
  canonicalURL = new URL(Astro.url.pathname, Astro.url.origin).href,
} = Astro.props;

const socialImageURL = new URL(
  ogImage ?? SITE.ogImage ?? "og.png",
  Astro.url.origin
).href;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- General Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <!-- Open Graph / Facebook -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:image" content={socialImageURL} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />

    <!-- Google Font -->

    <meta name="theme-color" content="" />

    {
      // If PUBLIC_GOOGLE_SITE_VERIFICATION is set in the environment variable,
      // include google-site-verification tag in the heading
      // Learn more: https://support.google.com/webmasters/answer/9008080#meta_tag_verification&zippy=%2Chtml-tag
      googleSiteVerification && (
        <meta
          name="google-site-verification"
          content={googleSiteVerification}
        />
      )
    }

    <ViewTransitions />
  </head>
  <body>
    <Header />
    <slot />
    <script is:inline>
      const navLinks = document.querySelectorAll("nav a");
      function updateActiveLink() {
        const sectionInView = window.location.href.split("#")[1];
        if (sectionInView.length) {
          navLinks.forEach((link) => {
            console.log(link.href.split("#")[1]);
            if (link.href.split("#")[1] === sectionInView[1]) {
              link.classList.add("active");
            } else {
              link.classList.remove("active");
            }
          });
        }
      }
      navLinks.forEach((navlink) =>
        navlink.addEventListener("click", updateActiveLink)
      );
    </script>
    <slot name="contact">
      <Contact />
    </slot>
    <Footer />
  </body>
</html>
